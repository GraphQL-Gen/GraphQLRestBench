{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_tv_popular\", \"description\": \"Get a list of the current popular TV shows on TMDb. This list updates daily.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": []}}, {\"name\": \"GET_tv__tv_id_\", \"description\": \"Get the primary TV show details by id.\\n\\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\\n\\n#### Recent Changes\\n\\n| **Date** | **Change** |\\n| - | - |\\n| July 17, 2018 | We now return `last_episode_to_air` and `next_episode_to_air` fields. |\\n| March 12, 2018 | Networks return proper logos and we introduced SVG support. |\\n| March 8, 2018 | The `seasons` field now returns the translated names and overviews. |\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}}, \"required\": [\"tv_id\"]}}, {\"name\": \"GET_company__company_id_\", \"description\": \"Get a companies details by id.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"company_id\": {\"type\": \"integer\", \"description\": \"company id\"}}, \"required\": [\"company_id\"]}}]\n\nGraphQL schema:\n\ntype GET_company__company_id_Root {\n  description: String\n  headquarters: String\n  homepage: String\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n  \"\"\"\n  Field \"parent_company\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  parent_company: JSON\n}\n\ntype Query {\n  GET_company__company_id_(\n    company_id: String!\n    tmdb_access_token: String!\n  ): GET_company__company_id_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/company/$company_id;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv_popular_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv_popular_Root {\n  page: Int\n  results: [GET_tv_popular_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_tv_popular(tmdb_access_token: String!): GET_tv_popular_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/popular\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id_CreatedByEntry {\n  credit_id: String\n  gender: Int\n  id: Int\n  name: String\n  original_name: String\n  profile_path: String\n}\n\ntype GET_tv__tv_id_GenresEntry {\n  id: Int\n  name: String\n}\n\ntype GET_tv__tv_id_LastEpisodeToAir {\n  air_date: Date\n  episode_number: Int\n  episode_type: String\n  id: Int\n  name: String\n  overview: String\n  production_code: String\n  runtime: Int\n  season_number: Int\n  show_id: Int\n  still_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv__tv_id_NetworksEntry {\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n}\n\ntype GET_tv__tv_id_ProductionCompaniesEntry {\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n}\n\ntype GET_tv__tv_id_ProductionCountriesEntry {\n  iso_3166_1: String\n  name: String\n}\n\ntype GET_tv__tv_id_Root {\n  adult: Boolean\n  backdrop_path: String\n  created_by: [GET_tv__tv_id_CreatedByEntry]\n  episode_run_time: [Int]\n  first_air_date: Date\n  genres: [GET_tv__tv_id_GenresEntry]\n  homepage: String\n  id: Int\n  in_production: Boolean\n  languages: [String]\n  last_air_date: Date\n  last_episode_to_air: GET_tv__tv_id_LastEpisodeToAir\n  name: String\n  networks: [GET_tv__tv_id_NetworksEntry]\n  \"\"\"\n  Field \"next_episode_to_air\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  next_episode_to_air: JSON\n  number_of_episodes: Int\n  number_of_seasons: Int\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  production_companies: [GET_tv__tv_id_ProductionCompaniesEntry]\n  production_countries: [GET_tv__tv_id_ProductionCountriesEntry]\n  seasons: [GET_tv__tv_id_SeasonsEntry]\n  spoken_languages: [GET_tv__tv_id_SpokenLanguagesEntry]\n  status: String\n  tagline: String\n  type: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv__tv_id_SeasonsEntry {\n  air_date: Date\n  episode_count: Int\n  id: Int\n  name: String\n  overview: String\n  poster_path: String\n  season_number: Int\n  vote_average: Float\n}\n\ntype GET_tv__tv_id_SpokenLanguagesEntry {\n  english_name: String\n  iso_639_1: String\n  name: String\n}\n\ntype Query {\n  GET_tv__tv_id_(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: Where is the headquarter of the company that produced currently the most popular TV show?", "output": "response_obj = GET_tv_popular()\nresponse_obj1 = GET_tv__tv_id_(tv_id=response_obj.results[0].id)\nGET_company__company_id_(company_id=response_obj1.production_companies[0].id)\n", "function_specs": "[{\"name\": \"GET_tv_popular\", \"description\": \"Get a list of the current popular TV shows on TMDb. This list updates daily.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": []}}, {\"name\": \"GET_tv__tv_id_\", \"description\": \"Get the primary TV show details by id.\\n\\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\\n\\n#### Recent Changes\\n\\n| **Date** | **Change** |\\n| - | - |\\n| July 17, 2018 | We now return `last_episode_to_air` and `next_episode_to_air` fields. |\\n| March 12, 2018 | Networks return proper logos and we introduced SVG support. |\\n| March 8, 2018 | The `seasons` field now returns the translated names and overviews. |\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}}, \"required\": [\"tv_id\"]}}, {\"name\": \"GET_company__company_id_\", \"description\": \"Get a companies details by id.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"company_id\": {\"type\": \"integer\", \"description\": \"company id\"}}, \"required\": [\"company_id\"]}}]", "GraphQL_schema": "type GET_company__company_id_Root {\n  description: String\n  headquarters: String\n  homepage: String\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n  \"\"\"\n  Field \"parent_company\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  parent_company: JSON\n}\n\ntype Query {\n  GET_company__company_id_(\n    company_id: String!\n    tmdb_access_token: String!\n  ): GET_company__company_id_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/company/$company_id;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv_popular_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv_popular_Root {\n  page: Int\n  results: [GET_tv_popular_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_tv_popular(tmdb_access_token: String!): GET_tv_popular_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/popular\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id_CreatedByEntry {\n  credit_id: String\n  gender: Int\n  id: Int\n  name: String\n  original_name: String\n  profile_path: String\n}\n\ntype GET_tv__tv_id_GenresEntry {\n  id: Int\n  name: String\n}\n\ntype GET_tv__tv_id_LastEpisodeToAir {\n  air_date: Date\n  episode_number: Int\n  episode_type: String\n  id: Int\n  name: String\n  overview: String\n  production_code: String\n  runtime: Int\n  season_number: Int\n  show_id: Int\n  still_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv__tv_id_NetworksEntry {\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n}\n\ntype GET_tv__tv_id_ProductionCompaniesEntry {\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n}\n\ntype GET_tv__tv_id_ProductionCountriesEntry {\n  iso_3166_1: String\n  name: String\n}\n\ntype GET_tv__tv_id_Root {\n  adult: Boolean\n  backdrop_path: String\n  created_by: [GET_tv__tv_id_CreatedByEntry]\n  episode_run_time: [Int]\n  first_air_date: Date\n  genres: [GET_tv__tv_id_GenresEntry]\n  homepage: String\n  id: Int\n  in_production: Boolean\n  languages: [String]\n  last_air_date: Date\n  last_episode_to_air: GET_tv__tv_id_LastEpisodeToAir\n  name: String\n  networks: [GET_tv__tv_id_NetworksEntry]\n  \"\"\"\n  Field \"next_episode_to_air\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  next_episode_to_air: JSON\n  number_of_episodes: Int\n  number_of_seasons: Int\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  production_companies: [GET_tv__tv_id_ProductionCompaniesEntry]\n  production_countries: [GET_tv__tv_id_ProductionCountriesEntry]\n  seasons: [GET_tv__tv_id_SeasonsEntry]\n  spoken_languages: [GET_tv__tv_id_SpokenLanguagesEntry]\n  status: String\n  tagline: String\n  type: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv__tv_id_SeasonsEntry {\n  air_date: Date\n  episode_count: Int\n  id: Int\n  name: String\n  overview: String\n  poster_path: String\n  season_number: Int\n  vote_average: Float\n}\n\ntype GET_tv__tv_id_SpokenLanguagesEntry {\n  english_name: String\n  iso_639_1: String\n  name: String\n}\n\ntype Query {\n  GET_tv__tv_id_(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "Where is the headquarter of the company that produced currently the most popular TV show?"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_tv\", \"description\": \"Search for a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"query\": {\"type\": \"string\", \"description\": \"query\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"first_air_date_year\": {\"type\": \"integer\", \"description\": \"first air date year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_tv__tv_id__season__season_number__credits\", \"description\": \"Get the credits for TV season.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}, \"season_number\": {\"type\": \"integer\", \"description\": \"season number\"}}, \"required\": [\"tv_id\", \"season_number\"]}}]\n\nGraphQL schema:\n\ntype GET_search_tv_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_tv_Root {\n  page: Int\n  results: [GET_search_tv_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_tv(query: String, tmdb_access_token: String!): GET_search_tv_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/tv\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__season__season_number__credits_CastEntry {\n  adult: Boolean\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__season__season_number__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__season__season_number__credits_Root {\n  cast: [GET_tv__tv_id__season__season_number__credits_CastEntry]\n  crew: [GET_tv__tv_id__season__season_number__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_tv__tv_id__season__season_number__credits(\n    season_number: String!\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__season__season_number__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/season/$season_number;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: tell me the directors of the first season of House of Cards", "output": "response_obj = GET_search_tv(query=\"House of Cards\")\nGET_tv__tv_id__season__season_number__credits(tv_id=response_obj.results[0].id, season_number=1)\n", "function_specs": "[{\"name\": \"GET_search_tv\", \"description\": \"Search for a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"query\": {\"type\": \"string\", \"description\": \"query\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"first_air_date_year\": {\"type\": \"integer\", \"description\": \"first air date year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_tv__tv_id__season__season_number__credits\", \"description\": \"Get the credits for TV season.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}, \"season_number\": {\"type\": \"integer\", \"description\": \"season number\"}}, \"required\": [\"tv_id\", \"season_number\"]}}]", "GraphQL_schema": "type GET_search_tv_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_tv_Root {\n  page: Int\n  results: [GET_search_tv_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_tv(query: String, tmdb_access_token: String!): GET_search_tv_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/tv\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__season__season_number__credits_CastEntry {\n  adult: Boolean\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__season__season_number__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__season__season_number__credits_Root {\n  cast: [GET_tv__tv_id__season__season_number__credits_CastEntry]\n  crew: [GET_tv__tv_id__season__season_number__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_tv__tv_id__season__season_number__credits(\n    season_number: String!\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__season__season_number__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/season/$season_number;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "tell me the directors of the first season of House of Cards"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_movie\", \"description\": \"Search for movies.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}, \"year\": {\"type\": \"integer\", \"description\": \"year\"}, \"primary_release_year\": {\"type\": \"integer\", \"description\": \"primary release year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_movie__movie_id__credits\", \"description\": \"Get the cast and crew for a movie.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"movie_id\": {\"type\": \"integer\", \"description\": \"movie id\"}}, \"required\": [\"movie_id\"]}}]\n\nGraphQL schema:\n\ntype GET_search_movie_ResultsEntry {\n  adult: Boolean\n  \"\"\"\n  Field \"backdrop_path\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  backdrop_path: JSON\n  genre_ids: [Int]\n  id: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_movie_Root {\n  page: Int\n  results: [GET_search_movie_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_movie(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_movie_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/movie\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_movie__movie_id__credits_CastEntry {\n  adult: Boolean\n  cast_id: Int\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_movie__movie_id__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_movie__movie_id__credits_Root {\n  cast: [GET_movie__movie_id__credits_CastEntry]\n  crew: [GET_movie__movie_id__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_movie__movie_id__credits(\n    movie_id: String!\n    tmdb_access_token: String!\n  ): GET_movie__movie_id__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/movie/$movie_id;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: Are Yui Aragaki and Gen Hoshino co-starring in We Married as Job?", "output": "response_obj = GET_search_movie(query=\"We Married as Job\")\nGET_movie__movie_id__credits(movie_id=response_obj.results[0].id)\n", "function_specs": "[{\"name\": \"GET_search_movie\", \"description\": \"Search for movies.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}, \"year\": {\"type\": \"integer\", \"description\": \"year\"}, \"primary_release_year\": {\"type\": \"integer\", \"description\": \"primary release year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_movie__movie_id__credits\", \"description\": \"Get the cast and crew for a movie.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"movie_id\": {\"type\": \"integer\", \"description\": \"movie id\"}}, \"required\": [\"movie_id\"]}}]", "GraphQL_schema": "type GET_search_movie_ResultsEntry {\n  adult: Boolean\n  \"\"\"\n  Field \"backdrop_path\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  backdrop_path: JSON\n  genre_ids: [Int]\n  id: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_movie_Root {\n  page: Int\n  results: [GET_search_movie_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_movie(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_movie_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/movie\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_movie__movie_id__credits_CastEntry {\n  adult: Boolean\n  cast_id: Int\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_movie__movie_id__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_movie__movie_id__credits_Root {\n  cast: [GET_movie__movie_id__credits_CastEntry]\n  crew: [GET_movie__movie_id__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_movie__movie_id__credits(\n    movie_id: String!\n    tmdb_access_token: String!\n  ): GET_movie__movie_id__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/movie/$movie_id;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "Are Yui Aragaki and Gen Hoshino co-starring in We Married as Job?"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_person_popular\", \"description\": \"Get the list of popular people on TMDb. This list updates daily.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": []}}]\n\nGraphQL schema:\n\ntype GET_person_popular_KnownForEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person_popular_ResultsEntry {\n  adult: Boolean\n  gender: Int\n  id: Int\n  known_for: [GET_person_popular_KnownForEntry]\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_person_popular_Root {\n  page: Int\n  results: [GET_person_popular_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_person_popular(tmdb_access_token: String!): GET_person_popular_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/popular\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: Who is the most popular person?", "output": "GET_person_popular()\n", "function_specs": "[{\"name\": \"GET_person_popular\", \"description\": \"Get the list of popular people on TMDb. This list updates daily.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": []}}]", "GraphQL_schema": "type GET_person_popular_KnownForEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person_popular_ResultsEntry {\n  adult: Boolean\n  gender: Int\n  id: Int\n  known_for: [GET_person_popular_KnownForEntry]\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_person_popular_Root {\n  page: Int\n  results: [GET_person_popular_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_person_popular(tmdb_access_token: String!): GET_person_popular_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/popular\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "Who is the most popular person?"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_person\", \"description\": \"Search for people.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_person__person_id__movie_credits\", \"description\": \"Get the movie credits for a person, the results contains various information such as popularity and release date.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}]\n\nGraphQL schema:\n\ntype GET_search_person_KnownForEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_person_ResultsEntry {\n  adult: Boolean\n  gender: Int\n  id: Int\n  known_for: [GET_search_person_KnownForEntry]\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_search_person_Root {\n  page: Int\n  results: [GET_search_person_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_person(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_person_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/person\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_person__person_id__movie_credits_CastEntry {\n  adult: Boolean\n  backdrop_path: String\n  character: String\n  credit_id: String\n  genre_ids: [Int]\n  id: Int\n  order: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_CrewEntry {\n  adult: Boolean\n  backdrop_path: String\n  credit_id: String\n  department: String\n  genre_ids: [Int]\n  id: Int\n  job: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_Root {\n  cast: [GET_person__person_id__movie_credits_CastEntry]\n  crew: [GET_person__person_id__movie_credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_person__person_id__movie_credits(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id__movie_credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;/movie_credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: Tell me about Katherine LaNasa's latest movie appearance.", "output": "response_obj = GET_search_person(query=\"Katherine LaNasa\")\nGET_person__person_id__movie_credits(person_id=response_obj.results[0].id)\n", "function_specs": "[{\"name\": \"GET_search_person\", \"description\": \"Search for people.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_person__person_id__movie_credits\", \"description\": \"Get the movie credits for a person, the results contains various information such as popularity and release date.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}]", "GraphQL_schema": "type GET_search_person_KnownForEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_person_ResultsEntry {\n  adult: Boolean\n  gender: Int\n  id: Int\n  known_for: [GET_search_person_KnownForEntry]\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_search_person_Root {\n  page: Int\n  results: [GET_search_person_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_person(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_person_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/person\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_person__person_id__movie_credits_CastEntry {\n  adult: Boolean\n  backdrop_path: String\n  character: String\n  credit_id: String\n  genre_ids: [Int]\n  id: Int\n  order: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_CrewEntry {\n  adult: Boolean\n  backdrop_path: String\n  credit_id: String\n  department: String\n  genre_ids: [Int]\n  id: Int\n  job: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_Root {\n  cast: [GET_person__person_id__movie_credits_CastEntry]\n  crew: [GET_person__person_id__movie_credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_person__person_id__movie_credits(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id__movie_credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;/movie_credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "Tell me about Katherine LaNasa's latest movie appearance."}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_movie\", \"description\": \"Search for movies.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}, \"year\": {\"type\": \"integer\", \"description\": \"year\"}, \"primary_release_year\": {\"type\": \"integer\", \"description\": \"primary release year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_movie__movie_id__credits\", \"description\": \"Get the cast and crew for a movie.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"movie_id\": {\"type\": \"integer\", \"description\": \"movie id\"}}, \"required\": [\"movie_id\"]}}, {\"name\": \"GET_person__person_id_\", \"description\": \"Get the primary person details by id.\\n\\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\\n\\n#### Recent Changes\\n\\n| **Date** | **Change** |\\n| - | - |\\n| July 17, 2018 | Added the `known_for_department` field. |\\n| April 26, 2018 | Added the [translations](#endpoint:CSaMjCxXAtGpxNGfS) method. |\\n| November 9, 2016 | Biographies are now translatable on TMDb. This means you can query person details with a language parameter. |\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}]\n\nGraphQL schema:\n\ntype GET_person__person_id_Root {\n  adult: Boolean\n  also_known_as: [String]\n  biography: String\n  birthday: Date\n  \"\"\"\n  Field \"deathday\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  deathday: JSON\n  gender: Int\n  \"\"\"\n  Field \"homepage\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  homepage: JSON\n  id: Int\n  imdb_id: String\n  known_for_department: String\n  name: String\n  place_of_birth: String\n  popularity: Float\n  profile_path: String\n}\n\ntype Query {\n  GET_person__person_id_(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_search_movie_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_movie_Root {\n  page: Int\n  results: [GET_search_movie_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_movie(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_movie_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/movie\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_movie__movie_id__credits_CastEntry {\n  adult: Boolean\n  cast_id: Int\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_movie__movie_id__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_movie__movie_id__credits_Root {\n  cast: [GET_movie__movie_id__credits_CastEntry]\n  crew: [GET_movie__movie_id__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_movie__movie_id__credits(\n    movie_id: String!\n    tmdb_access_token: String!\n  ): GET_movie__movie_id__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/movie/$movie_id;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: When is the bitrhday of the lead actor of the movie The Shawshank Redemption?", "output": "response_obj = GET_search_movie(query=\"The Shawshank Redemption\")\nresponse_obj1 = GET_movie__movie_id__credits(movie_id=response_obj.results[0].id)\nGET_person__person_id_(person_id=response_obj1.cast[0].id)\n", "function_specs": "[{\"name\": \"GET_search_movie\", \"description\": \"Search for movies.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}, \"year\": {\"type\": \"integer\", \"description\": \"year\"}, \"primary_release_year\": {\"type\": \"integer\", \"description\": \"primary release year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_movie__movie_id__credits\", \"description\": \"Get the cast and crew for a movie.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"movie_id\": {\"type\": \"integer\", \"description\": \"movie id\"}}, \"required\": [\"movie_id\"]}}, {\"name\": \"GET_person__person_id_\", \"description\": \"Get the primary person details by id.\\n\\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\\n\\n#### Recent Changes\\n\\n| **Date** | **Change** |\\n| - | - |\\n| July 17, 2018 | Added the `known_for_department` field. |\\n| April 26, 2018 | Added the [translations](#endpoint:CSaMjCxXAtGpxNGfS) method. |\\n| November 9, 2016 | Biographies are now translatable on TMDb. This means you can query person details with a language parameter. |\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}]", "GraphQL_schema": "type GET_person__person_id_Root {\n  adult: Boolean\n  also_known_as: [String]\n  biography: String\n  birthday: Date\n  \"\"\"\n  Field \"deathday\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  deathday: JSON\n  gender: Int\n  \"\"\"\n  Field \"homepage\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  homepage: JSON\n  id: Int\n  imdb_id: String\n  known_for_department: String\n  name: String\n  place_of_birth: String\n  popularity: Float\n  profile_path: String\n}\n\ntype Query {\n  GET_person__person_id_(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_search_movie_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_movie_Root {\n  page: Int\n  results: [GET_search_movie_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_movie(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_movie_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/movie\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_movie__movie_id__credits_CastEntry {\n  adult: Boolean\n  cast_id: Int\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_movie__movie_id__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_movie__movie_id__credits_Root {\n  cast: [GET_movie__movie_id__credits_CastEntry]\n  crew: [GET_movie__movie_id__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_movie__movie_id__credits(\n    movie_id: String!\n    tmdb_access_token: String!\n  ): GET_movie__movie_id__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/movie/$movie_id;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "When is the bitrhday of the lead actor of the movie The Shawshank Redemption?"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_trending__media_type___time_window_\", \"description\": \"Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\\n\\n#### Valid Media Types\\n\\n| **Media Type** | **Description** |\\n| - | - |\\n| all | Include all movies, TV shows and people in the results as a global trending list. |\\n| movie | Show the trending movies in the results. |\\n| tv | Show the trending TV shows in the results. |\\n| person | Show the trending people in the results. |\\n\\n#### Valid Time Windows\\n\\n| **Time Window** | **Description** |\\n| - | - |\\n| day | View the trending list for the day. |\\n| week | View the trending list for the week. |\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"media_type\": {\"type\": \"string\", \"description\": \"media type\\nValid values: all,movie,tv,person\"}, \"time_window\": {\"type\": \"string\", \"description\": \"time window\\nValid values: day,week\"}}, \"required\": [\"media_type\", \"time_window\"]}}, {\"name\": \"GET_tv__tv_id__credits\", \"description\": \"Get the credits (cast and crew) that have been added to a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}}, \"required\": [\"tv_id\"]}}, {\"name\": \"GET_person__person_id_\", \"description\": \"Get the primary person details by id.\\n\\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\\n\\n#### Recent Changes\\n\\n| **Date** | **Change** |\\n| - | - |\\n| July 17, 2018 | Added the `known_for_department` field. |\\n| April 26, 2018 | Added the [translations](#endpoint:CSaMjCxXAtGpxNGfS) method. |\\n| November 9, 2016 | Biographies are now translatable on TMDb. This means you can query person details with a language parameter. |\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}]\n\nGraphQL schema:\n\ntype GET_person__person_id_Root {\n  adult: Boolean\n  also_known_as: [String]\n  biography: String\n  birthday: Date\n  \"\"\"\n  Field \"deathday\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  deathday: JSON\n  gender: Int\n  \"\"\"\n  Field \"homepage\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  homepage: JSON\n  id: Int\n  imdb_id: String\n  known_for_department: String\n  name: String\n  place_of_birth: String\n  popularity: Float\n  profile_path: String\n}\n\ntype Query {\n  GET_person__person_id_(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_trending__media_type___time_window_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_trending__media_type___time_window_Root {\n  page: Int\n  results: [GET_trending__media_type___time_window_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_trending__media_type___time_window_(\n    media_type: String!\n    time_window: String!\n    tmdb_access_token: String!\n  ): GET_trending__media_type___time_window_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/trending/$media_type;/$time_window;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__credits_CastEntry {\n  adult: Boolean\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__credits_Root {\n  cast: [GET_tv__tv_id__credits_CastEntry]\n  crew: [GET_tv__tv_id__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_tv__tv_id__credits(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: When is the birthday of the lead actor of today's most trending TV show?", "output": "response_obj = GET_trending__media_type___time_window_(media_type=\"tv\", time_window=\"day\")\nresponse_obj1 = GET_tv__tv_id__credits(tv_id=response_obj.results[0].id)\nGET_person__person_id_(person_id=response_obj1.cast[0].id)\n", "function_specs": "[{\"name\": \"GET_trending__media_type___time_window_\", \"description\": \"Get the daily or weekly trending items. The daily trending list tracks items over the period of a day while items have a 24 hour half life. The weekly list tracks items over a 7 day period, with a 7 day half life.\\n\\n#### Valid Media Types\\n\\n| **Media Type** | **Description** |\\n| - | - |\\n| all | Include all movies, TV shows and people in the results as a global trending list. |\\n| movie | Show the trending movies in the results. |\\n| tv | Show the trending TV shows in the results. |\\n| person | Show the trending people in the results. |\\n\\n#### Valid Time Windows\\n\\n| **Time Window** | **Description** |\\n| - | - |\\n| day | View the trending list for the day. |\\n| week | View the trending list for the week. |\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"media_type\": {\"type\": \"string\", \"description\": \"media type\\nValid values: all,movie,tv,person\"}, \"time_window\": {\"type\": \"string\", \"description\": \"time window\\nValid values: day,week\"}}, \"required\": [\"media_type\", \"time_window\"]}}, {\"name\": \"GET_tv__tv_id__credits\", \"description\": \"Get the credits (cast and crew) that have been added to a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}}, \"required\": [\"tv_id\"]}}, {\"name\": \"GET_person__person_id_\", \"description\": \"Get the primary person details by id.\\n\\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\\n\\n#### Recent Changes\\n\\n| **Date** | **Change** |\\n| - | - |\\n| July 17, 2018 | Added the `known_for_department` field. |\\n| April 26, 2018 | Added the [translations](#endpoint:CSaMjCxXAtGpxNGfS) method. |\\n| November 9, 2016 | Biographies are now translatable on TMDb. This means you can query person details with a language parameter. |\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}]", "GraphQL_schema": "type GET_person__person_id_Root {\n  adult: Boolean\n  also_known_as: [String]\n  biography: String\n  birthday: Date\n  \"\"\"\n  Field \"deathday\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  deathday: JSON\n  gender: Int\n  \"\"\"\n  Field \"homepage\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  homepage: JSON\n  id: Int\n  imdb_id: String\n  known_for_department: String\n  name: String\n  place_of_birth: String\n  popularity: Float\n  profile_path: String\n}\n\ntype Query {\n  GET_person__person_id_(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_trending__media_type___time_window_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_trending__media_type___time_window_Root {\n  page: Int\n  results: [GET_trending__media_type___time_window_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_trending__media_type___time_window_(\n    media_type: String!\n    time_window: String!\n    tmdb_access_token: String!\n  ): GET_trending__media_type___time_window_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/trending/$media_type;/$time_window;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__credits_CastEntry {\n  adult: Boolean\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__credits_Root {\n  cast: [GET_tv__tv_id__credits_CastEntry]\n  crew: [GET_tv__tv_id__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_tv__tv_id__credits(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "When is the birthday of the lead actor of today's most trending TV show?"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_tv_on_the_air\", \"description\": \"Get a list of shows that are currently on the air.\\n\\nThis query looks for any TV show that has an episode with an air date in the next 7 days.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": []}}, {\"name\": \"GET_tv__tv_id_\", \"description\": \"Get the primary TV show details by id.\\n\\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\\n\\n#### Recent Changes\\n\\n| **Date** | **Change** |\\n| - | - |\\n| July 17, 2018 | We now return `last_episode_to_air` and `next_episode_to_air` fields. |\\n| March 12, 2018 | Networks return proper logos and we introduced SVG support. |\\n| March 8, 2018 | The `seasons` field now returns the translated names and overviews. |\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}}, \"required\": [\"tv_id\"]}}]\n\nGraphQL schema:\n\ntype GET_tv_on_the_air_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv_on_the_air_Root {\n  page: Int\n  results: [GET_tv_on_the_air_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_tv_on_the_air(tmdb_access_token: String!): GET_tv_on_the_air_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/on_the_air\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id_CreatedByEntry {\n  credit_id: String\n  gender: Int\n  id: Int\n  name: String\n  original_name: String\n  profile_path: String\n}\n\ntype GET_tv__tv_id_GenresEntry {\n  id: Int\n  name: String\n}\n\ntype GET_tv__tv_id_LastEpisodeToAir {\n  air_date: Date\n  episode_number: Int\n  episode_type: String\n  id: Int\n  name: String\n  overview: String\n  production_code: String\n  runtime: Int\n  season_number: Int\n  show_id: Int\n  still_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv__tv_id_NetworksEntry {\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n}\n\ntype GET_tv__tv_id_ProductionCompaniesEntry {\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n}\n\ntype GET_tv__tv_id_ProductionCountriesEntry {\n  iso_3166_1: String\n  name: String\n}\n\ntype GET_tv__tv_id_Root {\n  adult: Boolean\n  backdrop_path: String\n  created_by: [GET_tv__tv_id_CreatedByEntry]\n  episode_run_time: [Int]\n  first_air_date: Date\n  genres: [GET_tv__tv_id_GenresEntry]\n  homepage: String\n  id: Int\n  in_production: Boolean\n  languages: [String]\n  last_air_date: Date\n  last_episode_to_air: GET_tv__tv_id_LastEpisodeToAir\n  name: String\n  networks: [GET_tv__tv_id_NetworksEntry]\n  \"\"\"\n  Field \"next_episode_to_air\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  next_episode_to_air: JSON\n  number_of_episodes: Int\n  number_of_seasons: Int\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  production_companies: [GET_tv__tv_id_ProductionCompaniesEntry]\n  production_countries: [GET_tv__tv_id_ProductionCountriesEntry]\n  seasons: [GET_tv__tv_id_SeasonsEntry]\n  spoken_languages: [GET_tv__tv_id_SpokenLanguagesEntry]\n  status: String\n  tagline: String\n  type: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv__tv_id_SeasonsEntry {\n  air_date: Date\n  episode_count: Int\n  id: Int\n  name: String\n  overview: String\n  poster_path: String\n  season_number: Int\n  vote_average: Float\n}\n\ntype GET_tv__tv_id_SpokenLanguagesEntry {\n  english_name: String\n  iso_639_1: String\n  name: String\n}\n\ntype Query {\n  GET_tv__tv_id_(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: When did the most popular TV show currently on the air start?", "output": "response_obj = GET_tv_on_the_air()\nGET_tv__tv_id_(tv_id=response_obj.results[0].id)\n", "function_specs": "[{\"name\": \"GET_tv_on_the_air\", \"description\": \"Get a list of shows that are currently on the air.\\n\\nThis query looks for any TV show that has an episode with an air date in the next 7 days.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": []}}, {\"name\": \"GET_tv__tv_id_\", \"description\": \"Get the primary TV show details by id.\\n\\nSupports `append_to_response`. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).\\n\\n#### Recent Changes\\n\\n| **Date** | **Change** |\\n| - | - |\\n| July 17, 2018 | We now return `last_episode_to_air` and `next_episode_to_air` fields. |\\n| March 12, 2018 | Networks return proper logos and we introduced SVG support. |\\n| March 8, 2018 | The `seasons` field now returns the translated names and overviews. |\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}}, \"required\": [\"tv_id\"]}}]", "GraphQL_schema": "type GET_tv_on_the_air_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv_on_the_air_Root {\n  page: Int\n  results: [GET_tv_on_the_air_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_tv_on_the_air(tmdb_access_token: String!): GET_tv_on_the_air_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/on_the_air\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id_CreatedByEntry {\n  credit_id: String\n  gender: Int\n  id: Int\n  name: String\n  original_name: String\n  profile_path: String\n}\n\ntype GET_tv__tv_id_GenresEntry {\n  id: Int\n  name: String\n}\n\ntype GET_tv__tv_id_LastEpisodeToAir {\n  air_date: Date\n  episode_number: Int\n  episode_type: String\n  id: Int\n  name: String\n  overview: String\n  production_code: String\n  runtime: Int\n  season_number: Int\n  show_id: Int\n  still_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv__tv_id_NetworksEntry {\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n}\n\ntype GET_tv__tv_id_ProductionCompaniesEntry {\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n}\n\ntype GET_tv__tv_id_ProductionCountriesEntry {\n  iso_3166_1: String\n  name: String\n}\n\ntype GET_tv__tv_id_Root {\n  adult: Boolean\n  backdrop_path: String\n  created_by: [GET_tv__tv_id_CreatedByEntry]\n  episode_run_time: [Int]\n  first_air_date: Date\n  genres: [GET_tv__tv_id_GenresEntry]\n  homepage: String\n  id: Int\n  in_production: Boolean\n  languages: [String]\n  last_air_date: Date\n  last_episode_to_air: GET_tv__tv_id_LastEpisodeToAir\n  name: String\n  networks: [GET_tv__tv_id_NetworksEntry]\n  \"\"\"\n  Field \"next_episode_to_air\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  next_episode_to_air: JSON\n  number_of_episodes: Int\n  number_of_seasons: Int\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  production_companies: [GET_tv__tv_id_ProductionCompaniesEntry]\n  production_countries: [GET_tv__tv_id_ProductionCountriesEntry]\n  seasons: [GET_tv__tv_id_SeasonsEntry]\n  spoken_languages: [GET_tv__tv_id_SpokenLanguagesEntry]\n  status: String\n  tagline: String\n  type: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv__tv_id_SeasonsEntry {\n  air_date: Date\n  episode_count: Int\n  id: Int\n  name: String\n  overview: String\n  poster_path: String\n  season_number: Int\n  vote_average: Float\n}\n\ntype GET_tv__tv_id_SpokenLanguagesEntry {\n  english_name: String\n  iso_639_1: String\n  name: String\n}\n\ntype Query {\n  GET_tv__tv_id_(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "When did the most popular TV show currently on the air start?"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_person\", \"description\": \"Search for people.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_person__person_id__movie_credits\", \"description\": \"Get the movie credits for a person, the results contains various information such as popularity and release date.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}]\n\nGraphQL schema:\n\ntype GET_search_person_KnownForEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_person_ResultsEntry {\n  adult: Boolean\n  gender: Int\n  id: Int\n  known_for: [GET_search_person_KnownForEntry]\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_search_person_Root {\n  page: Int\n  results: [GET_search_person_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_person(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_person_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/person\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_person__person_id__movie_credits_CastEntry {\n  adult: Boolean\n  backdrop_path: String\n  character: String\n  credit_id: String\n  genre_ids: [Int]\n  id: Int\n  order: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_CrewEntry {\n  adult: Boolean\n  backdrop_path: String\n  credit_id: String\n  department: String\n  genre_ids: [Int]\n  id: Int\n  job: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_Root {\n  cast: [GET_person__person_id__movie_credits_CastEntry]\n  crew: [GET_person__person_id__movie_credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_person__person_id__movie_credits(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id__movie_credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;/movie_credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: Who is the director of Leonardo DiCaprio's latest movie?", "output": "response_obj = GET_search_person(query=\"Leonardo DiCaprio\")\nGET_person__person_id__movie_credits(person_id=response_obj.results[0].id)\n", "function_specs": "[{\"name\": \"GET_search_person\", \"description\": \"Search for people.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_person__person_id__movie_credits\", \"description\": \"Get the movie credits for a person, the results contains various information such as popularity and release date.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}]", "GraphQL_schema": "type GET_search_person_KnownForEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_person_ResultsEntry {\n  adult: Boolean\n  gender: Int\n  id: Int\n  known_for: [GET_search_person_KnownForEntry]\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_search_person_Root {\n  page: Int\n  results: [GET_search_person_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_person(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_person_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/person\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_person__person_id__movie_credits_CastEntry {\n  adult: Boolean\n  backdrop_path: String\n  character: String\n  credit_id: String\n  genre_ids: [Int]\n  id: Int\n  order: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_CrewEntry {\n  adult: Boolean\n  backdrop_path: String\n  credit_id: String\n  department: String\n  genre_ids: [Int]\n  id: Int\n  job: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_Root {\n  cast: [GET_person__person_id__movie_credits_CastEntry]\n  crew: [GET_person__person_id__movie_credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_person__person_id__movie_credits(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id__movie_credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;/movie_credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "Who is the director of Leonardo DiCaprio's latest movie?"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_person\", \"description\": \"Search for people.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_person__person_id__movie_credits\", \"description\": \"Get the movie credits for a person, the results contains various information such as popularity and release date.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}]\n\nGraphQL schema:\n\ntype GET_search_person_KnownForEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_person_ResultsEntry {\n  adult: Boolean\n  gender: Int\n  id: Int\n  known_for: [GET_search_person_KnownForEntry]\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_search_person_Root {\n  page: Int\n  results: [GET_search_person_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_person(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_person_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/person\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_person__person_id__movie_credits_CastEntry {\n  adult: Boolean\n  backdrop_path: String\n  character: String\n  credit_id: String\n  genre_ids: [Int]\n  id: Int\n  order: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_CrewEntry {\n  adult: Boolean\n  backdrop_path: String\n  credit_id: String\n  department: String\n  genre_ids: [Int]\n  id: Int\n  job: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_Root {\n  cast: [GET_person__person_id__movie_credits_CastEntry]\n  crew: [GET_person__person_id__movie_credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_person__person_id__movie_credits(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id__movie_credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;/movie_credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: give me the number of movies directed by Sofia Coppola", "output": "response_obj = GET_search_person(query=\"Sofia Coppola\")\nGET_person__person_id__movie_credits(person_id=response_obj.results[0].id)\n", "function_specs": "[{\"name\": \"GET_search_person\", \"description\": \"Search for people.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_person__person_id__movie_credits\", \"description\": \"Get the movie credits for a person, the results contains various information such as popularity and release date.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}]", "GraphQL_schema": "type GET_search_person_KnownForEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_person_ResultsEntry {\n  adult: Boolean\n  gender: Int\n  id: Int\n  known_for: [GET_search_person_KnownForEntry]\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_search_person_Root {\n  page: Int\n  results: [GET_search_person_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_person(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_person_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/person\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_person__person_id__movie_credits_CastEntry {\n  adult: Boolean\n  backdrop_path: String\n  character: String\n  credit_id: String\n  genre_ids: [Int]\n  id: Int\n  order: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_CrewEntry {\n  adult: Boolean\n  backdrop_path: String\n  credit_id: String\n  department: String\n  genre_ids: [Int]\n  id: Int\n  job: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_Root {\n  cast: [GET_person__person_id__movie_credits_CastEntry]\n  crew: [GET_person__person_id__movie_credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_person__person_id__movie_credits(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id__movie_credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;/movie_credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "give me the number of movies directed by Sofia Coppola"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_company\", \"description\": \"Search for companies.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_company__company_id_\", \"description\": \"Get a companies details by id.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"company_id\": {\"type\": \"integer\", \"description\": \"company id\"}}, \"required\": [\"company_id\"]}}]\n\nGraphQL schema:\n\ntype GET_search_company_ResultsEntry {\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n}\n\ntype GET_search_company_Root {\n  page: Int\n  results: [GET_search_company_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_company(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_company_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/company\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_company__company_id_Root {\n  description: String\n  headquarters: String\n  homepage: String\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n  \"\"\"\n  Field \"parent_company\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  parent_company: JSON\n}\n\ntype Query {\n  GET_company__company_id_(\n    company_id: String!\n    tmdb_access_token: String!\n  ): GET_company__company_id_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/company/$company_id;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: tell me where the company \"universal pictures\" was founded?", "output": "response_obj = GET_search_company(query=\"universal pictures\")\nGET_company__company_id_(company_id=response_obj.results[0].id)\n", "function_specs": "[{\"name\": \"GET_search_company\", \"description\": \"Search for companies.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_company__company_id_\", \"description\": \"Get a companies details by id.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"company_id\": {\"type\": \"integer\", \"description\": \"company id\"}}, \"required\": [\"company_id\"]}}]", "GraphQL_schema": "type GET_search_company_ResultsEntry {\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n}\n\ntype GET_search_company_Root {\n  page: Int\n  results: [GET_search_company_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_company(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_company_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/company\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_company__company_id_Root {\n  description: String\n  headquarters: String\n  homepage: String\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n  \"\"\"\n  Field \"parent_company\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  parent_company: JSON\n}\n\ntype Query {\n  GET_company__company_id_(\n    company_id: String!\n    tmdb_access_token: String!\n  ): GET_company__company_id_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/company/$company_id;\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "tell me where the company \"universal pictures\" was founded?"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_tv\", \"description\": \"Search for a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"query\": {\"type\": \"string\", \"description\": \"query\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"first_air_date_year\": {\"type\": \"integer\", \"description\": \"first air date year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_tv__tv_id__season__season_number__credits\", \"description\": \"Get the credits for TV season.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}, \"season_number\": {\"type\": \"integer\", \"description\": \"season number\"}}, \"required\": [\"tv_id\", \"season_number\"]}}]\n\nGraphQL schema:\n\ntype GET_search_tv_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_tv_Root {\n  page: Int\n  results: [GET_search_tv_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_tv(query: String, tmdb_access_token: String!): GET_search_tv_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/tv\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__season__season_number__credits_CastEntry {\n  adult: Boolean\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__season__season_number__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__season__season_number__credits_Root {\n  cast: [GET_tv__tv_id__season__season_number__credits_CastEntry]\n  crew: [GET_tv__tv_id__season__season_number__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_tv__tv_id__season__season_number__credits(\n    season_number: String!\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__season__season_number__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/season/$season_number;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: Who directed the third episode of the second season of Black Mirror?", "output": "response_obj = GET_search_tv(query=\"Black Mirror\")\nGET_tv__tv_id__season__season_number__credits(tv_id=response_obj.results[0].id, season_number=2)\n", "function_specs": "[{\"name\": \"GET_search_tv\", \"description\": \"Search for a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"query\": {\"type\": \"string\", \"description\": \"query\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"first_air_date_year\": {\"type\": \"integer\", \"description\": \"first air date year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_tv__tv_id__season__season_number__credits\", \"description\": \"Get the credits for TV season.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}, \"season_number\": {\"type\": \"integer\", \"description\": \"season number\"}}, \"required\": [\"tv_id\", \"season_number\"]}}]", "GraphQL_schema": "type GET_search_tv_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_tv_Root {\n  page: Int\n  results: [GET_search_tv_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_tv(query: String, tmdb_access_token: String!): GET_search_tv_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/tv\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__season__season_number__credits_CastEntry {\n  adult: Boolean\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__season__season_number__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__season__season_number__credits_Root {\n  cast: [GET_tv__tv_id__season__season_number__credits_CastEntry]\n  crew: [GET_tv__tv_id__season__season_number__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_tv__tv_id__season__season_number__credits(\n    season_number: String!\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__season__season_number__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/season/$season_number;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "Who directed the third episode of the second season of Black Mirror?"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_tv\", \"description\": \"Search for a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"query\": {\"type\": \"string\", \"description\": \"query\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"first_air_date_year\": {\"type\": \"integer\", \"description\": \"first air date year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_tv__tv_id__recommendations\", \"description\": \"Get the list of TV show recommendations for this item.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": [\"tv_id\"]}}]\n\nGraphQL schema:\n\ntype GET_search_tv_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_tv_Root {\n  page: Int\n  results: [GET_search_tv_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_tv(query: String, tmdb_access_token: String!): GET_search_tv_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/tv\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__recommendations_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv__tv_id__recommendations_Root {\n  page: Int\n  results: [GET_tv__tv_id__recommendations_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_tv__tv_id__recommendations(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__recommendations_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/recommendations\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: I'm watching a TV show called The Last Of Us and I need some more recommendations", "output": "response_obj = GET_search_tv(query=\"The Last Of Us\")\nGET_tv__tv_id__recommendations(tv_id=response_obj.results[0].id)\n", "function_specs": "[{\"name\": \"GET_search_tv\", \"description\": \"Search for a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"query\": {\"type\": \"string\", \"description\": \"query\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"first_air_date_year\": {\"type\": \"integer\", \"description\": \"first air date year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_tv__tv_id__recommendations\", \"description\": \"Get the list of TV show recommendations for this item.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": [\"tv_id\"]}}]", "GraphQL_schema": "type GET_search_tv_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_tv_Root {\n  page: Int\n  results: [GET_search_tv_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_tv(query: String, tmdb_access_token: String!): GET_search_tv_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/tv\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__recommendations_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv__tv_id__recommendations_Root {\n  page: Int\n  results: [GET_tv__tv_id__recommendations_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_tv__tv_id__recommendations(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__recommendations_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/recommendations\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "I'm watching a TV show called The Last Of Us and I need some more recommendations"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_movie_now_playing\", \"description\": \"Get a list of movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\\n\\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}}, \"required\": []}}, {\"name\": \"GET_movie__movie_id__images\", \"description\": \"Get the images that belong to a movie.\\n\\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"movie_id\": {\"type\": \"integer\", \"description\": \"movie id\"}, \"include_image_language\": {\"type\": \"string\", \"description\": \"include image language\"}}, \"required\": [\"movie_id\"]}}]\n\nGraphQL schema:\n\ntype GET_movie_now_playing_Dates {\n  maximum: Date\n  minimum: Date\n}\n\ntype GET_movie_now_playing_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_movie_now_playing_Root {\n  dates: GET_movie_now_playing_Dates\n  page: Int\n  results: [GET_movie_now_playing_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_movie_now_playing(tmdb_access_token: String!): GET_movie_now_playing_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/movie/now_playing\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_movie__movie_id__images_BackdropsEntry {\n  aspect_ratio: Float\n  file_path: String\n  height: Int\n  iso_639_1: String\n  vote_average: Float\n  vote_count: Int\n  width: Int\n}\n\ntype GET_movie__movie_id__images_LogosEntry {\n  aspect_ratio: Float\n  file_path: String\n  height: Int\n  iso_639_1: String\n  vote_average: Float\n  vote_count: Int\n  width: Int\n}\n\ntype GET_movie__movie_id__images_PostersEntry {\n  aspect_ratio: Float\n  file_path: String\n  height: Int\n  iso_639_1: String\n  vote_average: Float\n  vote_count: Int\n  width: Int\n}\n\ntype GET_movie__movie_id__images_Root {\n  backdrops: [GET_movie__movie_id__images_BackdropsEntry]\n  id: Int\n  logos: [GET_movie__movie_id__images_LogosEntry]\n  posters: [GET_movie__movie_id__images_PostersEntry]\n}\n\ntype Query {\n  GET_movie__movie_id__images(\n    movie_id: String!\n    tmdb_access_token: String!\n  ): GET_movie__movie_id__images_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/movie/$movie_id;/images\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: give me one image of the movie that is currently showing in theaters", "output": "response_obj = GET_movie_now_playing()\nGET_movie__movie_id__images(movie_id=response_obj.results[0].id)\n", "function_specs": "[{\"name\": \"GET_movie_now_playing\", \"description\": \"Get a list of movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.\\n\\nYou can optionally specify a `region` prameter which will narrow the search to only look for theatrical release dates within the specified country.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}}, \"required\": []}}, {\"name\": \"GET_movie__movie_id__images\", \"description\": \"Get the images that belong to a movie.\\n\\nQuerying images with a `language` parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the `include_image_language` parameter. This should be a comma seperated value like so: `include_image_language=en,null`.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"movie_id\": {\"type\": \"integer\", \"description\": \"movie id\"}, \"include_image_language\": {\"type\": \"string\", \"description\": \"include image language\"}}, \"required\": [\"movie_id\"]}}]", "GraphQL_schema": "type GET_movie_now_playing_Dates {\n  maximum: Date\n  minimum: Date\n}\n\ntype GET_movie_now_playing_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_movie_now_playing_Root {\n  dates: GET_movie_now_playing_Dates\n  page: Int\n  results: [GET_movie_now_playing_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_movie_now_playing(tmdb_access_token: String!): GET_movie_now_playing_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/movie/now_playing\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_movie__movie_id__images_BackdropsEntry {\n  aspect_ratio: Float\n  file_path: String\n  height: Int\n  iso_639_1: String\n  vote_average: Float\n  vote_count: Int\n  width: Int\n}\n\ntype GET_movie__movie_id__images_LogosEntry {\n  aspect_ratio: Float\n  file_path: String\n  height: Int\n  iso_639_1: String\n  vote_average: Float\n  vote_count: Int\n  width: Int\n}\n\ntype GET_movie__movie_id__images_PostersEntry {\n  aspect_ratio: Float\n  file_path: String\n  height: Int\n  iso_639_1: String\n  vote_average: Float\n  vote_count: Int\n  width: Int\n}\n\ntype GET_movie__movie_id__images_Root {\n  backdrops: [GET_movie__movie_id__images_BackdropsEntry]\n  id: Int\n  logos: [GET_movie__movie_id__images_LogosEntry]\n  posters: [GET_movie__movie_id__images_PostersEntry]\n}\n\ntype Query {\n  GET_movie__movie_id__images(\n    movie_id: String!\n    tmdb_access_token: String!\n  ): GET_movie__movie_id__images_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/movie/$movie_id;/images\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "give me one image of the movie that is currently showing in theaters"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_tv_on_the_air\", \"description\": \"Get a list of shows that are currently on the air.\\n\\nThis query looks for any TV show that has an episode with an air date in the next 7 days.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": []}}, {\"name\": \"GET_tv__tv_id__credits\", \"description\": \"Get the credits (cast and crew) that have been added to a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}}, \"required\": [\"tv_id\"]}}]\n\nGraphQL schema:\n\ntype GET_tv_on_the_air_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv_on_the_air_Root {\n  page: Int\n  results: [GET_tv_on_the_air_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_tv_on_the_air(tmdb_access_token: String!): GET_tv_on_the_air_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/on_the_air\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__credits_CastEntry {\n  adult: Boolean\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__credits_Root {\n  cast: [GET_tv__tv_id__credits_CastEntry]\n  crew: [GET_tv__tv_id__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_tv__tv_id__credits(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: tell me the cast of a TV show on the air", "output": "response_obj = GET_tv_on_the_air()\nGET_tv__tv_id__credits(tv_id=response_obj.results[0].id)\n", "function_specs": "[{\"name\": \"GET_tv_on_the_air\", \"description\": \"Get a list of shows that are currently on the air.\\n\\nThis query looks for any TV show that has an episode with an air date in the next 7 days.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": []}}, {\"name\": \"GET_tv__tv_id__credits\", \"description\": \"Get the credits (cast and crew) that have been added to a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}}, \"required\": [\"tv_id\"]}}]", "GraphQL_schema": "type GET_tv_on_the_air_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv_on_the_air_Root {\n  page: Int\n  results: [GET_tv_on_the_air_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_tv_on_the_air(tmdb_access_token: String!): GET_tv_on_the_air_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/on_the_air\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__credits_CastEntry {\n  adult: Boolean\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__credits_Root {\n  cast: [GET_tv__tv_id__credits_CastEntry]\n  crew: [GET_tv__tv_id__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_tv__tv_id__credits(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "tell me the cast of a TV show on the air"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_company\", \"description\": \"Search for companies.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_company__company_id__images\", \"description\": \"Get a companies logos by id.\\n\\nThere are two image formats that are supported for companies, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\\n\\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"company_id\": {\"type\": \"integer\", \"description\": \"company id\"}}, \"required\": [\"company_id\"]}}]\n\nGraphQL schema:\n\ntype GET_search_company_ResultsEntry {\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n}\n\ntype GET_search_company_Root {\n  page: Int\n  results: [GET_search_company_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_company(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_company_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/company\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_company__company_id__images_LogosEntry {\n  aspect_ratio: Float\n  file_path: String\n  file_type: String\n  height: Int\n  id: String\n  vote_average: Float\n  vote_count: Int\n  width: Int\n}\n\ntype GET_company__company_id__images_Root {\n  id: Int\n  logos: [GET_company__company_id__images_LogosEntry]\n}\n\ntype Query {\n  GET_company__company_id__images(\n    company_id: String!\n    tmdb_access_token: String!\n  ): GET_company__company_id__images_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/company/$company_id;/images\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: What is the logo of the Walt Disney?", "output": "response_obj = GET_search_company(query=\"Walt Disney\")\nGET_company__company_id__images(company_id=response_obj.results[0].id)\n", "function_specs": "[{\"name\": \"GET_search_company\", \"description\": \"Search for companies.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_company__company_id__images\", \"description\": \"Get a companies logos by id.\\n\\nThere are two image formats that are supported for companies, PNG's and SVG's. You can see which type the original file is by looking at the `file_type` field. We prefer SVG's as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.\\n\\nFor more information about how SVG's and PNG's can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"company_id\": {\"type\": \"integer\", \"description\": \"company id\"}}, \"required\": [\"company_id\"]}}]", "GraphQL_schema": "type GET_search_company_ResultsEntry {\n  id: Int\n  logo_path: String\n  name: String\n  origin_country: String\n}\n\ntype GET_search_company_Root {\n  page: Int\n  results: [GET_search_company_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_company(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_company_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/company\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_company__company_id__images_LogosEntry {\n  aspect_ratio: Float\n  file_path: String\n  file_type: String\n  height: Int\n  id: String\n  vote_average: Float\n  vote_count: Int\n  width: Int\n}\n\ntype GET_company__company_id__images_Root {\n  id: Int\n  logos: [GET_company__company_id__images_LogosEntry]\n}\n\ntype Query {\n  GET_company__company_id__images(\n    company_id: String!\n    tmdb_access_token: String!\n  ): GET_company__company_id__images_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/company/$company_id;/images\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "What is the logo of the Walt Disney?"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_person\", \"description\": \"Search for people.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_person__person_id__movie_credits\", \"description\": \"Get the movie credits for a person, the results contains various information such as popularity and release date.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}, {\"name\": \"GET_movie__movie_id__release_dates\", \"description\": \"Get the release date along with the certification for a movie.\\n\\nRelease dates support different types:\\n\\n1. Premiere\\n2. Theatrical (limited)\\n3. Theatrical\\n4. Digital\\n5. Physical\\n6. TV\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"movie_id\": {\"type\": \"integer\", \"description\": \"movie id\"}}, \"required\": [\"movie_id\"]}}]\n\nGraphQL schema:\n\ntype GET_movie__movie_id__release_dates_ReleaseDatesEntry {\n  certification: String\n  descriptors: [String]\n  iso_639_1: String\n  note: String\n  release_date: DateTime\n  type: Int\n}\n\ntype GET_movie__movie_id__release_dates_ResultsEntry {\n  iso_3166_1: String\n  release_dates: [GET_movie__movie_id__release_dates_ReleaseDatesEntry]\n}\n\ntype GET_movie__movie_id__release_dates_Root {\n  id: Int\n  results: [GET_movie__movie_id__release_dates_ResultsEntry]\n}\n\ntype Query {\n  GET_movie__movie_id__release_dates(\n    movie_id: String!\n    tmdb_access_token: String!\n  ): GET_movie__movie_id__release_dates_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/movie/$movie_id;/release_dates\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_search_person_KnownForEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_person_ResultsEntry {\n  adult: Boolean\n  gender: Int\n  id: Int\n  known_for: [GET_search_person_KnownForEntry]\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_search_person_Root {\n  page: Int\n  results: [GET_search_person_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_person(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_person_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/person\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_person__person_id__movie_credits_CastEntry {\n  adult: Boolean\n  backdrop_path: String\n  character: String\n  credit_id: String\n  genre_ids: [Int]\n  id: Int\n  order: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_CrewEntry {\n  adult: Boolean\n  backdrop_path: String\n  credit_id: String\n  department: String\n  genre_ids: [Int]\n  id: Int\n  job: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_Root {\n  cast: [GET_person__person_id__movie_credits_CastEntry]\n  crew: [GET_person__person_id__movie_credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_person__person_id__movie_credits(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id__movie_credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;/movie_credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: When is Clint Eastwood's latest movie scheduled to be released?", "output": "response_obj = GET_search_person(query=\"Clint Eastwood\")\nresponse_obj1 = GET_person__person_id__movie_credits(person_id=response_obj.results[0].id)\nGET_movie__movie_id__release_dates(movie_id=response_obj1.cast[0].id)\n", "function_specs": "[{\"name\": \"GET_search_person\", \"description\": \"Search for people.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_person__person_id__movie_credits\", \"description\": \"Get the movie credits for a person, the results contains various information such as popularity and release date.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}, {\"name\": \"GET_movie__movie_id__release_dates\", \"description\": \"Get the release date along with the certification for a movie.\\n\\nRelease dates support different types:\\n\\n1. Premiere\\n2. Theatrical (limited)\\n3. Theatrical\\n4. Digital\\n5. Physical\\n6. TV\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"movie_id\": {\"type\": \"integer\", \"description\": \"movie id\"}}, \"required\": [\"movie_id\"]}}]", "GraphQL_schema": "type GET_movie__movie_id__release_dates_ReleaseDatesEntry {\n  certification: String\n  descriptors: [String]\n  iso_639_1: String\n  note: String\n  release_date: DateTime\n  type: Int\n}\n\ntype GET_movie__movie_id__release_dates_ResultsEntry {\n  iso_3166_1: String\n  release_dates: [GET_movie__movie_id__release_dates_ReleaseDatesEntry]\n}\n\ntype GET_movie__movie_id__release_dates_Root {\n  id: Int\n  results: [GET_movie__movie_id__release_dates_ResultsEntry]\n}\n\ntype Query {\n  GET_movie__movie_id__release_dates(\n    movie_id: String!\n    tmdb_access_token: String!\n  ): GET_movie__movie_id__release_dates_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/movie/$movie_id;/release_dates\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_search_person_KnownForEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_person_ResultsEntry {\n  adult: Boolean\n  gender: Int\n  id: Int\n  known_for: [GET_search_person_KnownForEntry]\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_search_person_Root {\n  page: Int\n  results: [GET_search_person_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_person(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_person_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/person\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_person__person_id__movie_credits_CastEntry {\n  adult: Boolean\n  backdrop_path: String\n  character: String\n  credit_id: String\n  genre_ids: [Int]\n  id: Int\n  order: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_CrewEntry {\n  adult: Boolean\n  backdrop_path: String\n  credit_id: String\n  department: String\n  genre_ids: [Int]\n  id: Int\n  job: String\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: String\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_person__person_id__movie_credits_Root {\n  cast: [GET_person__person_id__movie_credits_CastEntry]\n  crew: [GET_person__person_id__movie_credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_person__person_id__movie_credits(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id__movie_credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;/movie_credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "When is Clint Eastwood's latest movie scheduled to be released?"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_tv\", \"description\": \"Search for a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"query\": {\"type\": \"string\", \"description\": \"query\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"first_air_date_year\": {\"type\": \"integer\", \"description\": \"first air date year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_tv__tv_id__recommendations\", \"description\": \"Get the list of TV show recommendations for this item.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": [\"tv_id\"]}}]\n\nGraphQL schema:\n\ntype GET_search_tv_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_tv_Root {\n  page: Int\n  results: [GET_search_tv_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_tv(query: String, tmdb_access_token: String!): GET_search_tv_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/tv\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__recommendations_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv__tv_id__recommendations_Root {\n  page: Int\n  results: [GET_tv__tv_id__recommendations_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_tv__tv_id__recommendations(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__recommendations_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/recommendations\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: Please recommend me some TV shows similar to Breaking Bad", "output": "response_obj = GET_search_tv(query=\"Breaking Bad\")\nGET_tv__tv_id__recommendations(tv_id=response_obj.results[0].id)\n", "function_specs": "[{\"name\": \"GET_search_tv\", \"description\": \"Search for a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"query\": {\"type\": \"string\", \"description\": \"query\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"first_air_date_year\": {\"type\": \"integer\", \"description\": \"first air date year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_tv__tv_id__recommendations\", \"description\": \"Get the list of TV show recommendations for this item.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": [\"tv_id\"]}}]", "GraphQL_schema": "type GET_search_tv_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_tv_Root {\n  page: Int\n  results: [GET_search_tv_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_tv(query: String, tmdb_access_token: String!): GET_search_tv_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/tv\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__recommendations_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  media_type: String\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv__tv_id__recommendations_Root {\n  page: Int\n  results: [GET_tv__tv_id__recommendations_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_tv__tv_id__recommendations(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__recommendations_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/recommendations\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "Please recommend me some TV shows similar to Breaking Bad"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_search_tv\", \"description\": \"Search for a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"query\": {\"type\": \"string\", \"description\": \"query\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"first_air_date_year\": {\"type\": \"integer\", \"description\": \"first air date year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_search_movie\", \"description\": \"Search for movies.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}, \"year\": {\"type\": \"integer\", \"description\": \"year\"}, \"primary_release_year\": {\"type\": \"integer\", \"description\": \"primary release year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_movie__movie_id__credits\", \"description\": \"Get the cast and crew for a movie.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"movie_id\": {\"type\": \"integer\", \"description\": \"movie id\"}}, \"required\": [\"movie_id\"]}}, {\"name\": \"GET_tv__tv_id__season__season_number__credits\", \"description\": \"Get the credits for TV season.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}, \"season_number\": {\"type\": \"integer\", \"description\": \"season number\"}}, \"required\": [\"tv_id\", \"season_number\"]}}]\n\nGraphQL schema:\n\ntype GET_movie__movie_id__credits_CastEntry {\n  adult: Boolean\n  cast_id: Int\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_movie__movie_id__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_movie__movie_id__credits_Root {\n  cast: [GET_movie__movie_id__credits_CastEntry]\n  crew: [GET_movie__movie_id__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_movie__movie_id__credits(\n    movie_id: String!\n    tmdb_access_token: String!\n  ): GET_movie__movie_id__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/movie/$movie_id;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__season__season_number__credits_CastEntry {\n  adult: Boolean\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__season__season_number__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__season__season_number__credits_Root {\n  cast: [GET_tv__tv_id__season__season_number__credits_CastEntry]\n  crew: [GET_tv__tv_id__season__season_number__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_tv__tv_id__season__season_number__credits(\n    season_number: String!\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__season__season_number__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/season/$season_number;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_search_tv_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_tv_Root {\n  page: Int\n  results: [GET_search_tv_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_tv(query: String, tmdb_access_token: String!): GET_search_tv_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/tv\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_search_movie_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_movie_Root {\n  page: Int\n  results: [GET_search_movie_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_movie(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_movie_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/movie\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: Is the director of Twin Peaks Season 1 and Mulholland Drive the same person?", "output": "response_obj = GET_search_tv(query=\"Twin Peaks\")\nresponse_obj1 = GET_search_movie(query=\"Mulholland Drive\")\nGET_movie__movie_id__credits(movie_id=response_obj1.results[0].id)\nGET_tv__tv_id__season__season_number__credits(tv_id=response_obj.results[0].id, season_number=1)\n", "function_specs": "[{\"name\": \"GET_search_tv\", \"description\": \"Search for a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"query\": {\"type\": \"string\", \"description\": \"query\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"first_air_date_year\": {\"type\": \"integer\", \"description\": \"first air date year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_search_movie\", \"description\": \"Search for movies.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"query\": {\"type\": \"string\", \"description\": \"query\"}, \"page\": {\"type\": \"integer\", \"description\": \"page\"}, \"include_adult\": {\"type\": \"boolean\", \"description\": \"include adult\"}, \"region\": {\"type\": \"string\", \"description\": \"region\"}, \"year\": {\"type\": \"integer\", \"description\": \"year\"}, \"primary_release_year\": {\"type\": \"integer\", \"description\": \"primary release year\"}}, \"required\": [\"query\"]}}, {\"name\": \"GET_movie__movie_id__credits\", \"description\": \"Get the cast and crew for a movie.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"movie_id\": {\"type\": \"integer\", \"description\": \"movie id\"}}, \"required\": [\"movie_id\"]}}, {\"name\": \"GET_tv__tv_id__season__season_number__credits\", \"description\": \"Get the credits for TV season.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}, \"season_number\": {\"type\": \"integer\", \"description\": \"season number\"}}, \"required\": [\"tv_id\", \"season_number\"]}}]", "GraphQL_schema": "type GET_movie__movie_id__credits_CastEntry {\n  adult: Boolean\n  cast_id: Int\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_movie__movie_id__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_movie__movie_id__credits_Root {\n  cast: [GET_movie__movie_id__credits_CastEntry]\n  crew: [GET_movie__movie_id__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_movie__movie_id__credits(\n    movie_id: String!\n    tmdb_access_token: String!\n  ): GET_movie__movie_id__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/movie/$movie_id;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__season__season_number__credits_CastEntry {\n  adult: Boolean\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__season__season_number__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__season__season_number__credits_Root {\n  cast: [GET_tv__tv_id__season__season_number__credits_CastEntry]\n  crew: [GET_tv__tv_id__season__season_number__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_tv__tv_id__season__season_number__credits(\n    season_number: String!\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__season__season_number__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/season/$season_number;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_search_tv_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_tv_Root {\n  page: Int\n  results: [GET_search_tv_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_tv(query: String, tmdb_access_token: String!): GET_search_tv_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/tv\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_search_movie_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  genre_ids: [Int]\n  id: Int\n  original_language: String\n  original_title: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  release_date: Date\n  title: String\n  video: Boolean\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_search_movie_Root {\n  page: Int\n  results: [GET_search_movie_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_search_movie(\n    query: String\n    tmdb_access_token: String!\n  ): GET_search_movie_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/search/movie\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "Is the director of Twin Peaks Season 1 and Mulholland Drive the same person?"}
{"domain": "tmdb", "input": "Function Signatures:\n\n[{\"name\": \"GET_tv_popular\", \"description\": \"Get a list of the current popular TV shows on TMDb. This list updates daily.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": []}}, {\"name\": \"GET_tv__tv_id__credits\", \"description\": \"Get the credits (cast and crew) that have been added to a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}}, \"required\": [\"tv_id\"]}}, {\"name\": \"GET_person__person_id__images\", \"description\": \"Get the images for a person.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}]\n\nGraphQL schema:\n\ntype GET_person__person_id__images_ProfilesEntry {\n  aspect_ratio: Float\n  file_path: String\n  height: Int\n  \"\"\"\n  Field \"iso_639_1\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  iso_639_1: JSON\n  vote_average: Float\n  vote_count: Int\n  width: Int\n}\n\ntype GET_person__person_id__images_Root {\n  id: Int\n  profiles: [GET_person__person_id__images_ProfilesEntry]\n}\n\ntype Query {\n  GET_person__person_id__images(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id__images_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;/images\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv_popular_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv_popular_Root {\n  page: Int\n  results: [GET_tv_popular_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_tv_popular(tmdb_access_token: String!): GET_tv_popular_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/popular\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__credits_CastEntry {\n  adult: Boolean\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__credits_Root {\n  cast: [GET_tv__tv_id__credits_CastEntry]\n  crew: [GET_tv__tv_id__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_tv__tv_id__credits(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n\nUtterance: give me a photo of the lead actor of the most popular TV show of this week", "output": "response_obj = GET_tv_popular()\nresponse_obj1 = GET_tv__tv_id__credits(tv_id=response_obj.results[0].id)\nGET_person__person_id__images(person_id=response_obj1.cast[0].id)\n", "function_specs": "[{\"name\": \"GET_tv_popular\", \"description\": \"Get a list of the current popular TV shows on TMDb. This list updates daily.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"page\": {\"type\": \"integer\", \"description\": \"page\"}}, \"required\": []}}, {\"name\": \"GET_tv__tv_id__credits\", \"description\": \"Get the credits (cast and crew) that have been added to a TV show.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"tv_id\": {\"type\": \"integer\", \"description\": \"tv id\"}}, \"required\": [\"tv_id\"]}}, {\"name\": \"GET_person__person_id__images\", \"description\": \"Get the images for a person.\", \"parameters\": {\"type\": \"dict\", \"properties\": {\"person_id\": {\"type\": \"integer\", \"description\": \"person id\"}}, \"required\": [\"person_id\"]}}]", "GraphQL_schema": "type GET_person__person_id__images_ProfilesEntry {\n  aspect_ratio: Float\n  file_path: String\n  height: Int\n  \"\"\"\n  Field \"iso_639_1\" is defined as JSON since its value was always 'null'\n  \"\"\"\n  iso_639_1: JSON\n  vote_average: Float\n  vote_count: Int\n  width: Int\n}\n\ntype GET_person__person_id__images_Root {\n  id: Int\n  profiles: [GET_person__person_id__images_ProfilesEntry]\n}\n\ntype Query {\n  GET_person__person_id__images(\n    person_id: String!\n    tmdb_access_token: String!\n  ): GET_person__person_id__images_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/person/$person_id;/images\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv_popular_ResultsEntry {\n  adult: Boolean\n  backdrop_path: String\n  first_air_date: Date\n  genre_ids: [Int]\n  id: Int\n  name: String\n  origin_country: [String]\n  original_language: String\n  original_name: String\n  overview: String\n  popularity: Float\n  poster_path: String\n  vote_average: Float\n  vote_count: Int\n}\n\ntype GET_tv_popular_Root {\n  page: Int\n  results: [GET_tv_popular_ResultsEntry]\n  total_pages: Int\n  total_results: Int\n}\n\ntype Query {\n  GET_tv_popular(tmdb_access_token: String!): GET_tv_popular_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/popular\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\ntype GET_tv__tv_id__credits_CastEntry {\n  adult: Boolean\n  character: String\n  credit_id: String\n  gender: Int\n  id: Int\n  known_for_department: String\n  name: String\n  order: Int\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__credits_CrewEntry {\n  adult: Boolean\n  credit_id: String\n  department: String\n  gender: Int\n  id: Int\n  job: String\n  known_for_department: String\n  name: String\n  original_name: String\n  popularity: Float\n  profile_path: String\n}\n\ntype GET_tv__tv_id__credits_Root {\n  cast: [GET_tv__tv_id__credits_CastEntry]\n  crew: [GET_tv__tv_id__credits_CrewEntry]\n  id: Int\n}\n\ntype Query {\n  GET_tv__tv_id__credits(\n    tmdb_access_token: String!\n    tv_id: String!\n  ): GET_tv__tv_id__credits_Root\n    @rest(\n      endpoint: \"https://api.themoviedb.org/3/tv/$tv_id;/credits\"\n      headers: [{ name: \"authorization\", value: \"Bearer $tmdb_access_token;\" }]\n    )\n}\n", "utterance": "give me a photo of the lead actor of the most popular TV show of this week"}
